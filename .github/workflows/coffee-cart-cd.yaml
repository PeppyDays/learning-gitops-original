on:
  pull_request:
    types:
    - closed
    paths:
    - .github/workflows/coffee-cart-ci.yaml
    - products/coffee/cart/**
  workflow_dispatch:

name: Coffee Cart CD
run-name: Coffee Cart CD by @${{ github.actor }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  APPLICATION_NAME: cart
  APPLICATION_PATH: products/coffee/cart
  GITOPS_PATH: gitops/applications/coffee/cart/api
  IMAGE_REPOSITORY: ghcr.io/${{ github.repository_owner }}/coffee/cart

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
    - name: Set Variables
      id: set-vars
      run: |
        echo "IMAGE_REPOSITORY=`echo ${{ env.IMAGE_REPOSITORY }} | tr '[:upper:]' '[:lower:]'`" >> $GITHUB_OUTPUT
    - name: Checkout Application Code
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          ${{ env.APPLICATION_PATH }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and Push
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.APPLICATION_PATH }}
        file: ${{ env.APPLICATION_PATH }}/Dockerfile
        push: true
        tags: |
          ${{ steps.set-vars.outputs.IMAGE_REPOSITORY }}:rc-${{ github.sha }}
          ${{ steps.set-vars.outputs.IMAGE_REPOSITORY }}:latest
        cache-from: type=registry,ref=${{ steps.set-vars.outputs.IMAGE_REPOSITORY }}}:cache
        cache-to: type=registry,ref=${{ steps.set-vars.outputs.IMAGE_REPOSITORY }}}:cache,mode=max
    - name: Tag Image
      run: |
        git tag ${{ env.APPLICATION_NAME }}/rc-${{ github.sha }}
        git tag -f ${{ env.APPLICATION_NAME }}/latest
        git push origin --tags -f
  deploy:
    name: Deploy
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout GitOps Code
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          ${{ env.GITOPS_PATH }}
    - name: Update Image Tag and Commit
      run: |
        pushd ${{ env.GITOPS_PATH }}
        yq -P -i '.image.tag = "rc-${{ github.sha }}"' values.yaml
        git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config --global user.name "$GITHUB_ACTOR"
        git add .
        git commit -m "Update image :: ${{ env.APPLICATION_NAME }} :: rc-${{ github.sha }}"
    - name: Push Commited Files
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 10
        max_attempts: 5
        retry_on: error
        command: |
          git pull --rebase
          git push -u origin
